package scl_drm;

enum controlType {
  REQUEST = 1;
  REPLY = 2;
  EVENT = 3;
}

enum commandId {
  GET_CHANNEL_LIST = 1;
  GET_SINGLE_CHANNEL = 2;
  PUBLISH_CHANNEL_LIST = 3;
  PUBLISH_STATE_UPDATE = 4;
}

enum channelProp {
  NONE = 1;
  LEAST_USED = 2;
  LONGEST_IDLE_TIME = 3;
  HIGHEST_BANDWIDTH = 4;
}

message statusUpdate {
  required uint32 channel_id = 1 ;
  required uint64 timestamp = 2 ;
  optional int32 rssi = 3 ;
  repeated int32 fft = 4 [packed=true];
  enum statusType {
    BUSY_PU = 0;
    FREE = 1;
    BUSY_SU = 2;
  }
  required statusType status = 5  ;
  optional uint64 sequence = 6 ;
}

message channelSpec {
    required uint32 channel_id = 1 ;
    required uint32 f_center = 2 ;
    required uint32 bandwith = 3 ;
    required string name = 4;
    required uint32 lo_offset = 5 ;
    required string antenna = 6 ;
    required uint32 tx_gain = 7 ;
    required uint32 rx_gain = 8 ;
    enum channelType {
       LICENCED = 0;
       UNLICENCED = 1;
    }
    required channelType channel_type = 9 ;
    optional uint32 f_start = 10 ;
    optional uint32 f_end = 11 ;
    optional uint64 sequence = 12 ;
    optional channelProp prop = 13;
}

message control {
  required controlType type = 1;
  required commandId command = 2;
  optional channelProp prop = 3;
  repeated channelSpec channelMap = 4;
}
